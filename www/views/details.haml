%h3 
  Details for
  Protein: 
  %span.protein== #{@protein},
  Mutation:
  %span.mutation= @mutation

%nav.tabs
  %ul
    %li
      %a.active(target="#protein") Protein 
    %li
      %a(target="#domain") Pfam Domain
    %li
      %a(target="#residue") Residue
    %li
      %a(target="#SNP2DB") This Mutation in other DBs
    %li
      %a(target="#SNP2L") Literature for Mutation
    %li
      %a(target="#IHOP") IHOP (Interactions)

#protein
  %dl.protein
    %dt Gene Name
    %dd= @name

    %dt Protein Long Name
    %dd= @description

    %dt Summary
    %dd= @summary

    %dt Kinase Group
    %dd
      == #{@features["uniprot_group"]}: #{$kinase_groups[@features["uniprot_group"]]}
    
    %dt.inline Gene Ontology Log-Odds Ratio
    %dd
      == #{"%.2f" % @features["sumGOLOR"].to_f}

    %table#goterms
      %thead
        %tr
          %th GOTerm
          %th Sub-ontology
          %th Name
      %tbody
        - @goterms.sort_by{|k,v| k}.each do |term,name|
          -  onto, name = name.match(/\((.*)\) (.*)/).values_at 1, 2
          %tr
            %td= term
            %td= {"MF" => "Molecular Function", "CC" => "Cellular Component", "BP" => "Biological Process"}[onto]
            %td= name

#domain
  - if not @features["pfam"].empty?
    %dl.pfam
      - @features["pfam"].split("|").each do |domain|
        %dt
          = $pfam_names[domain][:description]
          (
          %a(href="http://pfam.sanger.ac.uk/family/#{domain}" target="_blank")= domain
          )
        %dd= $pfam_names[domain][:content]
  - else
    %h4 No Pfam Domain


#residue
  
  #residue_general
    %dl.residue
      %dt.specificity Kinase Family Subspecificity
      %dd.specificity
        %dl
          %dt Wild Type
          %dd= "%.2f" % @features["TDs_fscore_wt"].to_f

          %dt Mutant
          %dd= "%.2f" % @features["TDs_fscore_mt"].to_f

          %dt Difference
          %dd= "%.2f" % @features["TDs_fscore_diff"].to_f


      %dt.kdhc Kyte-Doolittle Hydrophobicity Change
      %dd.kdhc
        == #{"%.2f" % @features["biochem_diffkdhydrophobicity"].to_f}

      %dt.sift SIFT Prediction (Score)
      %dd.sift
        - case @features["SIFTscore_binned"]
        - when "-1"
          == Neutral (#{@features["SIFTscore"]}) 
        - when "1"
          == Disease (#{@features["SIFTscore"]}) 
        - when "0"
          == Not Predicted (#{@features["SIFTscore"]}) 

  #residue_functional
    %dl.functional
      - features = %w(firedb phosphoelm swannot_ptm swannot_disulfid swannot_carbohyd swannot_act_site swannot_signal swannot_catalytic swannot_site swannot_mod_res swannot_np_bind swannot_transmem swannot_mutagen swannot_metal swannot_binding)
      - names    = %w(FireDB PhosphoELM Post_Trans._Modification Disulfide_Bond Carbohyd Active_Site Signal_Peptide Catalytic_Site Site Modified_Residue Nucleotide_Binding Transmembrane Mutagenesis Metal_Binding Binding).collect{|v| v.gsub(/_/,' ')}
      - trans = Hash[*features.zip(names).flatten]
      - headers = %w( firedb phosphoelm swannot_transmem swannot_mutagen swannot_ptm swannot_catalytic )
      - %w( firedb phosphoelm swannot_transmem swannot_mutagen swannot_ptm swannot_mod_res swannot_signal swannot_catalytic swannot_disulfid swannot_carbohyd swannot_act_site swannot_site swannot_np_bind     swannot_metal swannot_binding ).each do |key|
        - name = trans[key]
        %dt{:class => (headers.include?(key) ? "" : "subfeature") }= name
        %dd{:class => (@features[key] == "1" ? 'red' : '')}= @features[key] == "1" ? "Yes" : "No"

#SNP2DB
  - snp2db = Kinase::Postgres.snp2db(@protein, @mutation.scan(/\d+/).first)
  %table#snp2db_table
    %thead
      %tr
        %th Mutation
        %th Description
        %th Database
    %tbody
    - snp2db.to_a.each do |info|
      - IndiferentHash.setup info
      %tr
        %td= [info[:wt], info[:seq_pos], info[:mutant]] * ""
        %td= info[:description]
        %td= info[:type]
 
#SNP2L
  - snp2l = Kinase::Postgres.snp2l(@protein, @mutation.scan(/\d+/).first)
  %table#snp2l_table
    %thead
      %tr
        %th Mutation
        %th PMID
        %th Content
        %th Comments
    %tbody
    - snp2l.to_a.each do |info|
      - IndiferentHash.setup info
      %tr
        %td
          - original, new = info.values_at :old_position, :new_position
          - if original != new
            == #{[info[:wt_aa], new, info[:mutant_aa]] * ""} (adjusted from: #{[info[:wt_aa], original, info[:mutant_aa]] * ""})
          - else
            = [info[:wt_aa], original, info[:mutant_aa]] * ""
        %td
          %a(href="http://www.ncbi.nlm.nih.gov/pubmed/#{info[:pubmed_id]}")= info[:pubmed_id]
        %td= info[:line_content]
        %td
          - if original != new
            == adjusted from: #{[info[:wt_aa], original, info[:mutant_aa]] * ""} by #{info[:type]}

#IHOP
  - sentences = Kinase.ihop_interactions(@protein)
  %ul
    - sentences.each do |sentence|
      %li= sentence



:javascript
  tabs($('nav.tabs'))
  $('#goterms,#snp2db_table,#snp2l_table').tablesorter({widgets: ['zebra']});

  $('ihopsentence').each(function(){
    var sentence = $(this);
    var pmid = sentence.attr('pmid');
    var orig = sentence.html();
    //var new_html = orig + ' (<a href="http://www.ncbi.nlm.nih.gov/pubmed/' + pmid + '">PMID: ' + pmid + '</a>)';
    var new_html = '[<a href="http://www.ncbi.nlm.nih.gov/pubmed/' + pmid + '">PMID: ' + pmid + '</a>] ' + orig;

    sentence.html(new_html);
  
  })
